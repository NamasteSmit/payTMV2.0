// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String? @unique
  name String?
  number String @unique
  password String
  onRampTransactions onRampTransactions[]
  balances Balance[]
  sentTransfers p2pTransfer[] @relation(name : "FromUserRelation")
  recievedTransfers p2pTransfer[]  @relation(name : "ToUserRelation")
} 

model Merchant {
  id Int @id @default(autoincrement())
  email String @unique
  name String?
  auth_type AuthType
}

enum AuthType {
 Google 
 Github
}

model onRampTransactions{
  id Int @id @default(autoincrement())
  status onRampStatus
  token String @unique
  provider String 
  amount Int
  startTime DateTime
  userId Int
  user User @relation(fields: [userId] , references: [id])
}

enum onRampStatus {
  Success
  Failure
  Processing
}

model Balance {
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int
  locked Int
  user  User @relation(fields: [userId] , references: [id])
}

model p2pTransfer {
   id Int @id @default(autoincrement())
   amount Int
   timeStamp DateTime
   fromUserId Int
   fromUser User @relation(name : "FromUserRelation" ,fields: [fromUserId] , references: [id])
   toUserId Int
   toUser User @relation(name : "ToUserRelation" ,fields: [toUserId] , references: [id])
}
